.gitlab-ci.yml:
  delete: true
appveyor.yml:
  delete: true
Gemfile:
  required:
    ':system_tests':
      - gem: 'puppet-module-posix-system-r#{minor_version}'
        platforms: ruby
      - gem: 'puppet-module-win-system-r#{minor_version}'
        platforms:
          - mswin
          - mingw
          - x64_mingw
      - gem: 'puppet_litmus'
        platforms:
          - ruby
          - mswin
          - mingw
          - x64_mingw
        condition: "ENV['PUPPET_GEM_VERSION'].nil? or ENV['PUPPET_GEM_VERSION'] !~ %r{ 5}"
Rakefile:
  requires:
  use_litmus_tasks: true
  extras:
    - |
       desc 'Syntax check shellscripts'
       task :shellcheck do
         Dir['{tasks,files}/**/*.sh'].each do |shell_file|
           sh "shellcheck #{shell_file}" do |ok, res|
               exit res.exitstatus unless ok
           end
         end
       end
    - |
       desc 'Check task names'
        task :tasknames do
          errors = Dir['tasks/**/*'].map do |task|
              "Task name \"#{task}\" is invalid" if File.basename(task) !~ /\A[a-z][a-z0-9_]*\.[a-z0-9_]+\Z/
          end.compact
          abort errors.join("\n") if errors.any?
       end

.travis.yml:
  branches:
    - /.*/
  deploy: true
  global_env:
    - SHELLCHECK_OPTS="-e SC1117"
  remove_includes:
    - 
      env: PUPPET_GEM_VERSION="~> 5.0" CHECK=parallel_spec
      rvm: 2.4.5
      stage: spec
    -
      env: PUPPET_GEM_VERSION="~> 6.0" CHECK=parallel_spec
      rvm: 2.5.3
      stage: spec
  includes:
    -
      env: CHECK="shellcheck tasknames"
      stage: static
# Litmus tests
    -
      bundler_args:
      dist: trusty
      env:
        - PLATFORMS=deb_puppet5
        - PROVISION_LIST=waffle_deb
        - PUPPET_VERSION=puppet5
      rvm: 2.5.1
      script:
      - bundle exec rake "litmus:provision_list[${PROVISION_LIST}]"
      - bundle exec bolt command run 'apt-get install wget -y' --inventoryfile inventory.yaml --nodes='localhost*'
      - bundle exec rake "litmus:install_agent[${PUPPET_VERSION}]"
      - bundle exec rake litmus:install_module
      - bundle exec rake litmus:acceptance:parallel
      services: docker
      sudo: required
      stage: acceptance
    -
      bundler_args:
      dist: trusty
      env:
        - PLATFORMS=deb_puppet6
        - PROVISION_LIST=waffle_deb
        - PUPPET_VERSION=puppet6
      rvm: 2.5.1
      script:
      - bundle exec rake "litmus:provision_list[${PROVISION_LIST}]"
      - bundle exec bolt command run 'apt-get install wget -y' --inventoryfile inventory.yaml --nodes='localhost*'
      - bundle exec rake "litmus:install_agent[${PUPPET_VERSION}]"
      - bundle exec rake litmus:install_module
      - bundle exec rake litmus:acceptance:parallel
      services: docker
      sudo: required
      stage: acceptance
    -
      bundler_args:
      dist: trusty
      env:
        - PLATFORMS=el_puppet5
        - PROVISION_LIST=waffle_el
        - PUPPET_VERSION=puppet5
      rvm: 2.5.1
      script:
      - bundle exec rake "litmus:provision_list[${PROVISION_LIST}]"
      - bundle exec rake "litmus:install_agent[${PUPPET_VERSION}]"
      - bundle exec rake litmus:install_module
      - bundle exec rake litmus:acceptance:parallel
      services: docker
      sudo: required
      stage: acceptance
    -
      bundler_args:
      dist: trusty
      env:
        - PLATFORMS=el_puppet6
        - PROVISION_LIST=waffle_el
        - PUPPET_VERSION=puppet6
      rvm: 2.5.1
      script:
      - bundle exec rake "litmus:provision_list[${PROVISION_LIST}]"
      - bundle exec rake "litmus:install_agent[${PUPPET_VERSION}]"
      - bundle exec rake litmus:install_module
      - bundle exec rake litmus:acceptance:parallel
      services: docker
      sudo: required
      stage: acceptance
  user: puppetlabs
  secure: secure string to be inserted here
.gitignore:
  paths:
    - /html/
